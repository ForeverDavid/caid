# -*- coding: UTF-8 -*-
import io
from Editor import Editor as TextEditor
from PythonEditor import Editor as PythonEditor
import wx
import os
import tempfile

def mktemp():
    fd, name = tempfile.mkstemp()
    os.close(fd)
    return name

class scripture(object):
    def __init__(self, wk):
        self._filename = None
        self._lines = []
        self._wk = wk

        self.headers()

    @property
    def wk(self):
        return self._wk

    def append(self, line):
        self._lines.append(line)

    def reset(self):
        self._lines = []
        self.headers()
        self._filename = None

    def headers(self):
        # header
        command = "# -*- coding: UTF-8 -*-"
        self.append(command)

        # new line
        self.append("\n")

        # comments
        command = "# -------------------------------------------------------"
        self.append(command)
        command = "# this file has been automatically generated by caid"
        self.append(command)
        command = "# scripture capability is still under devlopments"
        self.append(command)
        command = "# please contact ratnaniahmed@gmail.com for any remark or improvement"
        self.append(command)

        command = "# -------------------------------------------------------"
        self.append(command)

        # new line
        self.append("\n")

        # import numpy
        command = "import numpy as np"
        self.append(command)

        # import numpy functions
        command = "from numpy import pi, array, asarray"
        self.append(command)

        # import cad_geometry
        command = "from caid.cad_geometry import *"
        self.append(command)

        # import igakit.cad
        command = "from igakit.cad import *"
        self.append(command)

        # import cad
        command = "from caid.utils import *"
        self.append(command)


        # import geometry
        command = "from geometry import *"
        self.append(command)

        # new line
        self.append("\n")

        # get the current workgroup
        command = "wk = workgroup"
        self.append(command)

        # get geometry container
        command = "geometries = wk.list_geo"
        self.append(command)

        # container for copy patchs action
        command = "list_copyPatchs = []"
        self.append(command)

    def new_line(self, n=1):
        for i in range(0, n):
            self.append("\n")

    def write(self, filename=None):
        wk = self.wk

        if self._filename is None:
            if filename is None:
                _filename = mktemp()
                _filename = _filename.split('.')[0]
                _filename = _filename + ".py"
                self._filename = _filename
            else:
                self._filename = filename

        f = open(self._filename, 'w')
        for line in self._lines:
            f.write(line)
            f.write("\n")
        f.close()

        title = self._filename

        # ... using TextEditor
#        edt = TextEditor(wk.parent, -1, title)
        last_name_saved = False
#        if filename is None:
#            last_name_saved = True
#        edt.DoOpenFile(filename=self._filename, last_name_saved=last_name_saved)
        # ...

        # ... using PythonEditor
        edt = PythonEditor(wk.parent, -1, title)
        edt.DoOpenFile(filename=self._filename, last_name_saved=last_name_saved)
        edt.Show()
        # ...

        # wait until the editor is closed
        saved = False
        while edt:
            if edt.last_name_saved:
                saved = True
                self._filename = edt.last_name_saved
                edt.SetTitle(self._filename)
            wx.MilliSleep(10)
            wx.GetApp().Yield()
        if saved:
            print(("macro recoding has been written in " + str(self._filename)))

# -------------------------------------------
if __name__ == '__main__':
    script = scripture()
    script.reset()
    script.write("script_out.py")
